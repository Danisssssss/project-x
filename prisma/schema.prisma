// Клиент с которым будем работать
generator client {
    provider = "prisma-client-js"
}

// База данных
datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

// Таблицы:
// Пользователь
model User {
    user_id  Int    @id @default(autoincrement())
    name     String
    email    String @unique
    password String

    role_id Int // Внешний ключ на Role
    Role    Role @relation(fields: [role_id], references: [role_id])

    Course     Course[]            @relation("TeacherCourses") // Курс, созданный этим пользователем
    Enrollment Course_Enrollment[] // Записи пользователя на курсы
    Submission Submission[] // Сдачи пользователя
}

// Роль
model Role {
    role_id   Int    @id @default(autoincrement())
    role_name String @unique

    Users User[]
}

// Курс
model Course {
    course_id  Int    @id @default(autoincrement())
    teacher_id Int
    title      String

    Teacher    User   @relation("TeacherCourses", fields: [teacher_id], references: [user_id])
    Assignments Assignment[]
    Enrollments Course_Enrollment[]
}

// Запись на курс
model Course_Enrollment {
    enrollment_id Int @id @default(autoincrement())
    course_id     Int
    student_id    Int

    Course  Course @relation(fields: [course_id], references: [course_id])
    Student User   @relation(fields: [student_id], references: [user_id])
}

// Задание
model Assignment {
    assignment_id Int    @id @default(autoincrement())
    course_id     Int
    title         String
    description   String
    max_grade     Int

    Course      Course                     @relation(fields: [course_id], references: [course_id])
    Files       Assignment_Files_Mappings[]
    Submissions Submission[]
}

// Файлы заданий
model Assignment_Files {
    file_id   Int    @id @default(autoincrement())
    file_name String
    file_path String
    file_type String

    Mappings Assignment_Files_Mappings[]
}

// Связь заданий и файлов
model Assignment_Files_Mappings {
    mapping_id    Int @id @default(autoincrement())
    assignment_id Int
    file_id       Int

    Assignment Assignment      @relation(fields: [assignment_id], references: [assignment_id])
    File       Assignment_Files @relation(fields: [file_id], references: [file_id])
}

// Сдача задания
model Submission {
    submission_id   Int      @id @default(autoincrement())
    assignment_id   Int
    student_id      Int
    submission_date DateTime @default(now())
    grade           Int?

    Assignment Assignment                 @relation(fields: [assignment_id], references: [assignment_id])
    Student    User                       @relation(fields: [student_id], references: [user_id])
    Files      Submission_Files_Mappings[]
}

// Файл сдачи задания
model Submission_Files {
    file_id   Int    @id @default(autoincrement())
    file_name String
    file_path String
    file_type String

    Mappings Submission_Files_Mappings[]
}

// Связь сдач и файлов
model Submission_Files_Mappings {
    mapping_id    Int @id @default(autoincrement())
    submission_id Int
    file_id       Int

    Submission Submission      @relation(fields: [submission_id], references: [submission_id])
    File       Submission_Files @relation(fields: [file_id], references: [file_id])
}
